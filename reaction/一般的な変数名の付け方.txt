/**
 * @title javaPractice / 一般的な変数名の付け方.txt
 * @see Java中級テキストについて.txt
 * @author shika
 * @date 2020-11-03
 */

■学校テキスト インプレス『スッキリＪａｖａ入門』について
このテキストはイラストや湊くんなどの会話に紙数を費やしたことにより、
文字ばかりの書よりは親しみやすくはありますが、
Ｊａｖａの一般的な記法を犠牲にして、１行に２つの処理を書いたり、
変数名をアルファベット１文字の省略したものを用いたりするクセが強く、
初学者がこのインプレス書で学ぶと「Ｊａｖａの書き方はこういうものだ」と思ってしまいます。

しかし、Ｊａｖａの一般的な記法、可読性(= 読みやすいコード)とは かけ離れた記法で書かれているということは
お伝えしておかなければなりません。

例えば int a = new java.util.Scanner(System.in).nextInt();というこのテキストの記法も
一般的なＪａｖａの記法とは大きくズレていて、とても異様なコードに見えてしまいます。

また識別子(= フィールド, メソッド, 変数の名前のこと)の付け方においても、
変数を省略して a とか m とか 、日本人しか解らないローマ字表記するなど。

会社に入って最初に直させられるのは、まさにこの識別子の命名法とＪａｖａの慣用的・一般的な記法
(文法規則ではないが普通はこう書く)という部分だと思います。


■一般的な識別子の命名法
＊記法
・クラス名:  Pascal記法(パスカル), UpperCamelCase -> 先頭大文字・単語の区切りも大文字 / PersonAge
・変数名・メソッド名: camelCase記法(キャメルケース) -> 先頭小文字・単語の区切りは大文字 / valueOf()
・final 定数: アンダースコア記法 -> 全て大文字・単語の区切りは「_」アンダースコア / BOUND, USER_AGE 


＊省略しない。意味や中身を類推できる名前にする
× nm -> 〇 name
× a -> 〇 age
× sp -> △ superHero ×予約語と似た変数名を付けない 
× m -> 〇 matango

省略してラクなのは制作者本人だけです。意味が直感的に解らない変数名の付いたコードを読まされる側は
いちいち変数の定義しているとこを探しに行って意味を把握して来なければならない。
正直、そんなコードは読む気にならない。


＊慣用的な略語はＯＫ
・例
「hp」(= hitPoint)
「id」(= identifer)
「sec」(= second 秒)
「calc」(= calculate 計算する)
「temp」(= temporary 一時的, 仮)

・Ｊａｖａで用意しているクラスの変数は省略しても意味が解ります。１文字はやめてね。
自己定義のクラスは省略しないほうが解りやすい。この辺りは好みの範囲かも
Scanner -> scn
Random -> rdm
String -> str

PersonName -> ×pn (意味解らんが) 
    PersonName personName = new PersonName();
    personName.judgeName();
    personName.printName();

と同じことを何度も書くのを嫌い、
クラスのインスタンス変数ぐらいは省略させろという人もいる。
この辺りは好みの分かれるところ。ただし、値を入れる変数名の省略は不可だよ。


＊ローマ字表記を避け、英語表記にする
Ｊａｖａ言語はＪａｖａプログラマにとって国際公用語です。
ローマ字は 日本人にしか解らないローカルな言語なので、面倒でも英語の識別子にしましょう。
私もよくGoogleで英単語を引きながら書いています。


＊まぎらわしい変数を混在させない
name と namae
age と Age
user と usr

予約語に似た識別子は避ける
life -> lf ×ifに見える
superXxxx -> 予約語super関連のものかと思う



⇒「Java中級テキストについて.txt」に続く


